expression   = primitive | symbolic_exp | group_exp ;
symbolic_exp = symbol_first, symbol_tail ;
symbol_first = name | list_exp ;
symbol_tail  = nil | arg_exp, symbol_tail | part_exp, symbol_tail
arg_exp      = '[', sequence,   ']' ;
part_exp     = '[[', sequence, ']]' ;
list_exp     = '{', sequence,   '}' ;
sequence     = nil | expression, seq_tail ;
seq_tail     = nil | ',', expression, seq_tail ;
group_exp    = '(', expression, ')' ;
primitive    = number | string ;
number       = integer| float  ;
integer      = digit,{digit}  ;
float        = integer, '.', [integer] ;
string       = '"', {character}, '"' ;
name         = letter,{letter | digit | '_'}
